plugins {
//    id 'java'
    id 'idea'
    id 'nu.studer.jooq' version '5.2.1'
    id "org.flywaydb.flyway" version "7.8.2"
//    id 'jacoco' // HERE!
}


group 'com.marketplace'
version '1.0.0-SNAPSHOT'

repositories {
    mavenLocal()
    mavenCentral()
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'

    java {
        sourceCompatibility = JavaVersion.VERSION_16
        targetCompatibility = JavaVersion.VERSION_16

        // has issues with preview-features
//    toolchain {
//        languageVersion = JavaLanguageVersion.of(15)
//    }
    }
//

//
//    idea {
//        module {
//            testSourceDirs += sourceSets.intTest.java.srcDirs
//            testResourceDirs += sourceSets.intTest.resources.srcDirs
//        }
//    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
        intTestImplementation {
            extendsFrom testImplementation
        }
        intTestRuntime {
            extendsFrom testRuntimeClasspath
        }

        flywayMigration
    }


    tasks.withType(JavaCompile) {
        options.compilerArgs += "--enable-preview"
    }
    tasks.withType(Test) {
        jvmArgs += "--enable-preview"
    }
    tasks.withType(JavaExec) {
        jvmArgs += "--enable-preview"
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }
//
//    test {
//        useJUnitPlatform()
//        testLogging {
//            events "passed", "skipped", "failed"
//        }
//    }
//
//    task intTest(type: Test) {
//        description = 'Runs the functional tests.'
//        group = 'verification'
//        testClassesDirs = sourceSets.intTest.output.classesDirs
//        classpath = sourceSets.intTest.runtimeClasspath
//        outputs.upToDateWhen { false }
//        mustRunAfter test
//    }
//
//    intTest {
//        useJUnitPlatform()
//        testLogging {
//            events "passed", "skipped", "failed"
//        }
//    }
//
//    check.dependsOn intTest
//
//    processIntTestResources {
//        duplicatesStrategy = DuplicatesStrategy.INCLUDE
//    }
}
